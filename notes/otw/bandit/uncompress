#!/bin/bash

# Micah Martin
# Try various decompressions techniques on a file recursively
# Made for the Bandit wargame on OvertheWire
# Inspired by https://github.com/UltimateHackers/Decodify

# re filename recurse-count
re () {
# Try to un hexdump the file
outfile="step$2"
fname=$1
ftype=`file $fname`

# Gzip
grep 'gzip compressed data' 2>/dev/null 1>/dev/null <<< $ftype
if [ $? = 0 ]; then
    gzip -d -c > $outfile < $fname
    echo "[Step $2] gzip detected. Writing to [$outfile]"
    step=$(($2 + 1))
    re $outfile $step
    return $?
fi

# Bzip2
grep 'bzip2 compressed data' 2>/dev/null 1>/dev/null <<< $ftype
if [ $? = 0 ]; then
    bzip2 -d -c > $outfile < $fname
    echo "[Step $2] bzip2 detected. Writing to [$outfile]"
    re $outfile $(($2 + 1))
    return $?
fi

# Check tar
grep 'tar archive' 2>/dev/null 1>/dev/null <<< $ftype
if [ $? = 0 ]; then
    file_count=$(tar -tf $fname | wc -l 2>/dev/null)
    if [ $file_count -lt 2 ]; then
        tar -xf $fname --to-stdout > $outfile;
        echo "[Step $2] tar detected. Writing to [$outfile]"
        re $outfile $(($2 + 1))
        return $?
    else
        echo "Final result is tar file with multiple files"
        echo "Extract with 'tar -xf $fname'"
        return 0
    fi
fi

# Check if the file is a xxd dump
grep -E "[0-9a-f]+: ([0-9a-f]{4} )+" $fname 2>/dev/null 1> /dev/null
if [ $? = 0 ]; then
    xxd -r $fname > $outfile
    echo "[Step $2] xxd dump detected. Writing to [$outfile]"
    step=$(($2 + 1))
    re $outfile $step
    return $?
fi

echo "No known methods detected, Exiting"
return 0
}

if [ "$1" = "" ]; then
    echo "Pass a filename!"
    exit
fi
echo "Checking compression methods for $1"
re $1 0
