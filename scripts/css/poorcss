#!/bin/bash
################################################
## A poor man's CSS compiler. Saves you from  ##
## Having to import a dozen CSS files in your ##
## HTML pages. Which in turn, save HTTP calls ##
##   Created by Micah Martin (knif3) - 2016   ##
################################################

OPTIND=1
help() {
cat <<__EOF__
SYNOPSIS
    poorcss [inputfile [file...]]

DESCRIPTION
    poorcss merges several css files into a single file

OPTIONS
    -o file
        the output file

    -c, -C
        removes blank lines and comments

    -s, -S
        compresses the entire file into a single line. Uses -c aswell

    -f file
        a text file listing all the input css files to add. Defaults to .poorcss

    -w, -W
        formats out windows-specfic characters and converts them to unix.
__EOF__
}
output=""
files=()
commands=()
windows=""
comp=""
inf=".poorcss"
remove_comments=" | sed  's:\/\*.*\*\/::'"
compress_text="$remove_comments"" | grep -v '^$'"
single_line="$compress_text""| tr ';\n' '; ' | tr '\\t' ' ' | tr -s ' '"
final_commands=""
sn=0

while getopts "h?o:cCsSf:wW" opt; do
    case "$opt" in
    h|\?)
        help
        exit 0
        ;;
    w|W)
        windows=' | dos2unix'
        ;;
    o)
        output="$OPTARG"
        ;;
    c|C)
        final_commands+=$compress_text
        ;;
    s|S)
        final_commands+=$single_line
        sn=1
        ;;
    f)
        inf=$OPTARG
        ;;
    esac
done

shift $((OPTIND-1))
[ "$1" = "--" ] && 

## Load the files
echo $@
files=( "$@" )
if [[ -f $inf  && -z $1 ]]; then
  ev="echo \$(cat '$inf')"
  echo "reading from file '$inf'" 1>&2
  files=( `eval $ev` )
fi

## check the files
if [[ ${#files[@]} -eq 0 ]]; then
  echo "NO FILES INPUT!" 1>&2
  echo "Exiting..." 1>&2
  exit
fi

## check to make sure all the files exist
for fi in ${files[@]}; do
  if [ ! -f $fi ]; then
    echo "FILE '$fi' DOES NOT EXIST" 1>&2
    echo "Exiting..." 1>&2
    exit
  fi
done

## execute the commands
run="cat ${files[@]} $windows$final_commands"
if [[ $output == "" ]]; then
  eval $run
  echo ""
  echo "Done." 1>&2
else
  eval $run > $output
  echo "Done." 1>&2
fi


